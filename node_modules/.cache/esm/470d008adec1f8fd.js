let chalk,fs,path,ncp,promisify;_dec‍.x([["create_app",()=>create_app]]);_dec‍.w("chalk",[["default",["chalk"],function(v){chalk=v}]]);_dec‍.w("fs",[["default",["fs"],function(v){fs=v}]]);_dec‍.w("path",[["default",["path"],function(v){path=v}]]);_dec‍.w("ncp",[["default",["ncp"],function(v){ncp=v}]]);_dec‍.w("util",[["promisify",["promisify"],function(v){promisify=v}]]);





const access = promisify(fs.access);
const copy = promisify(ncp);

async function copyTemplateFiles(options) {
    return copy(options.templateDirectory, options.targetDirectory, {
        clobber: false,
    });
}

       async function create_app(options) {
    options = {
        ...options,
        targetDirectory: options.targetDirectory || process.cwd(),
    };

    const currentFileUrl = _dec‍._.meta.url;
    const templateDir = path.resolve(__dirname, '../templates/javascript');
    _dec‍.g.console.log(templateDir);
    options.templateDirectory = templateDir;

    try {
        await access(templateDir, fs.constants.R_OK);
    } catch(e) {
        _dec‍.g.console.error(e);
        process.exit(1);
    }

    console.log('Creating New Application...');
    await copyTemplateFiles(options);
    _dec‍.g.console.log('%s Project Ready!', chalk.green.bold('DONE'));
    return true;
}